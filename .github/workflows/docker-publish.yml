name: Build and publish Docker image

on:
  push:
    branches: [main]
    tags:
      - "v*"
      - "release-*"
  workflow_dispatch:

jobs:
  build-and-push:
    # Only run on main or tags, and only if Docker Hub secrets are present
    if: >-
      (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')) &&
      secrets.DOCKERHUB_USERNAME != '' && secrets.DOCKERHUB_TOKEN != ''
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      DOCKERHUB_REPO: autorisen

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v2

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Determine image and version
        id: meta
        run: |
          set -euo pipefail
          # Use the DockerHub username from repo secrets
          IMAGE_USER="${{ secrets.DOCKERHUB_USERNAME }}"
          # Allow optional override for repo name via env; default to 'autorisen'
          IMAGE_REPO="${DOCKERHUB_REPO:-autorisen}"
          GIT_SHA=$(git rev-parse --short HEAD)
          DATE_UTC=$(date -u +%Y%m%d-%H%M)
          # Allow optional explicit version via DOCKERHUB_VERSION; fallback to DATE+SHA
          VERSION="${DOCKERHUB_VERSION:-${DATE_UTC}-${GIT_SHA}}"
          echo "IMAGE=${IMAGE_USER}/${IMAGE_REPO}" >> "$GITHUB_OUTPUT"
          echo "VERSION=${VERSION}" >> "$GITHUB_OUTPUT"

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: backend/Dockerfile
          platforms: linux/amd64
          target: backend
          push: true
          tags: |
            ${{ steps.meta.outputs.IMAGE }}:${{ steps.meta.outputs.VERSION }}
            ${{ steps.meta.outputs.IMAGE }}:latest

      - name: Done
        run: echo "Published ${{ steps.meta.outputs.IMAGE }}:${{ steps.meta.outputs.VERSION }}"
