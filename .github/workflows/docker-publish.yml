name: Build and publish Docker image

on:
  push:
    branches: [ main ]
    tags:    ['v*', 'release-*']
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v2

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Determine image name and tag
        id: meta
        run: |
          # Use the secret via GitHub expression, fallbacks handled in shell
          IMAGE_USER="${{ secrets.DOCKERHUB_USERNAME }}"
          # Allow optional repo/version to be provided via environment variables; otherwise use sensible defaults
          IMAGE_REPO="${DOCKERHUB_REPO:-autorisen}"
          GIT_SHA=$(git rev-parse --short HEAD)
          DATE_UTC=$(date -u +%Y%m%d-%H%M)
          VERSION="${DOCKERHUB_VERSION:-${DATE_UTC}-${GIT_SHA}}"
          echo "IMAGE=${IMAGE_USER}/${IMAGE_REPO}" >> $GITHUB_OUTPUT
          echo "VERSION=${VERSION}" >> $GITHUB_OUTPUT

      - name: Build and push Docker image (backend)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: backend/Dockerfile
          platforms: linux/amd64
          target: backend
          push: true
          tags: |
            ${{ steps.meta.outputs.IMAGE }}:${{ steps.meta.outputs.VERSION }}
            ${{ steps.meta.outputs.IMAGE }}:latest

      - name: Image published
        run: |
          echo "Published ${{ steps.meta.outputs.IMAGE }}:${{ steps.meta.outputs.VERSION }} and :latest"

# Notes:
# - Create repository secrets: DOCKERHUB_USERNAME, DOCKERHUB_TOKEN
# - Optional repo-level envs (in Actions UI) you can set: DOCKERHUB_REPO, DOCKERHUB_VERSION
# - This workflow builds the backend target from `backend/Dockerfile` and pushes two tags.