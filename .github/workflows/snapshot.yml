name: Snapshot Project Plan (PR; no-marketplace)

on:
  workflow_dispatch:
  schedule:
    - cron: "0 5 * * *" # daily 05:00 UTC

permissions:
  contents: write
  pull-requests: write

jobs:
  snapshot:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      BASE_BRANCH: ${{ github.event.repository.default_branch }}
      SNAPSHOT_SCRIPT: tools/snapshot_plan.py
      SNAPSHOT_LABEL: automation
    steps:
      - name: Show context
        run: |
          echo "BASE_BRANCH=$BASE_BRANCH"
          echo "ACTOR=${{ github.actor }}"
          echo "REPO=${{ github.repository }}"

      # No marketplace checkout; do it manually
      - name: Checkout repository (manual)
        run: |
          set -euo pipefail
          git init .
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git remote add origin "https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git"
          # Fetch all heads so we can base from default branch even for 'schedule'
          git fetch --depth=1 origin "+refs/heads/*:refs/remotes/origin/*"
          git checkout -B "$BASE_BRANCH" "origin/$BASE_BRANCH"
          # Create a unique working branch
          BRANCH="bot/snapshot-$(date -u +%Y%m%d-%H%M%S)-${{ github.run_id }}"
          echo "BRANCH=$BRANCH" >> $GITHUB_ENV
          git checkout -b "$BRANCH"

      - name: Ensure gh is authenticated
        run: |
          echo "$GH_TOKEN" | gh auth login --with-token

      - name: Ensure label exists
        run: |
          gh label create "$SNAPSHOT_LABEL" --force --description "Automations and bots"

      - name: (Optional) Setup Python
        run: |
          python3 --version
          # If you ever add deps, install them here (e.g., pip install -r tools/requirements.txt)

      - name: Generate snapshot
        run: |
          set -euo pipefail
          if [ ! -f "$SNAPSHOT_SCRIPT" ]; then
            echo "Snapshot script '$SNAPSHOT_SCRIPT' not found"; exit 1
          fi
          python3 "$SNAPSHOT_SCRIPT"

      - name: Stage & detect changes
        id: diff
        run: |
          set -euo pipefail
          git add -A
          if git diff --staged --quiet; then
            echo "changed=false" >> "$GITHUB_OUTPUT"
            echo "No changes detected."
          else
            git commit -m "chore(snapshot): project plan"
            echo "changed=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Push branch
        if: steps.diff.outputs.changed == 'true'
        run: |
          git push -u origin "$BRANCH"

      - name: Open PR
        if: steps.diff.outputs.changed == 'true'
        run: |
          gh pr create \
            --head "$BRANCH" \
            --base "$BASE_BRANCH" \
            --title "Snapshot: project plan" \
            --body "Automated snapshot update (generated by \`$SNAPSHOT_SCRIPT\`)." \
            --label "$SNAPSHOT_LABEL"
