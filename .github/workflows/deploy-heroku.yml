name: CI & Deploy (Heroku autorisen)

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: "3.12"
      - run: pip install -e ./backend
      - run: python -c "import fastapi, uvicorn; print('smoke ok')" # quick import test

  deploy:
    needs: test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU (for multi-platform builds, optional)
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Heroku Container Registry
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: |
          echo "$HEROKU_API_KEY" | docker login --username=_ --password-stdin registry.heroku.com

      - name: Build Docker image
        run: |
          docker build -t registry.heroku.com/${{ secrets.HEROKU_APP_NAME }}/web .

      - name: Push Docker image
        run: |
          docker push registry.heroku.com/${{ secrets.HEROKU_APP_NAME }}/web

      - name: Install Heroku CLI
        run: |
          curl https://cli-assets.heroku.com/install.sh | sh

      - name: Release to Heroku
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: |
          heroku container:release web --app ${{ secrets.HEROKU_APP_NAME }}

      - name: Wait for release
        run: |
          echo "Waiting 6s for Heroku router to route to the new release"
          sleep 6

      - name: Post-release smoke test
        env:
          APP_NAME: ${{ secrets.HEROKU_APP_NAME }}
        run: |
          set -e
          URL="https://${APP_NAME}.herokuapp.com/alive"
          # Try /alive up to 6 times, then fallback to /
          for i in 1 2 3 4 5 6; do
            echo "Attempt $i: curl -fsS $URL"
            if curl -fsS "$URL" -m 10; then
              echo "Alive endpoint responded"
              exit 0
            fi
            sleep 2
          done

          echo "Fallback: trying /"
          if curl -fsS "https://${APP_NAME}.herokuapp.com/" -m 10; then
            echo "/ responded (fallback)"
            exit 0
          fi

          echo "Smoke test failed: app did not respond on /alive or /"
          exit 1
