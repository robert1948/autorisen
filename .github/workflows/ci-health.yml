name: CI - Health Service

on:
  push:
    branches: [main, modularization/rfc]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  test-health:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Install deps
        run: |
          set -euo pipefail
          # create a venv so installs don't pollute the runner
          python -m venv .venv
          . .venv/bin/activate
          python -m pip install --upgrade pip
          echo "Listing workspace files for debugging..."
          ls -R . | sed -n '1,200p'
          if [ -f services/health/requirements.txt ]; then
            echo "Found services/health/requirements.txt — installing from file"
            python -m pip install -r services/health/requirements.txt
          else
            echo "services/health/requirements.txt not found — falling back to explicit installs"
            python -m pip install "fastapi==0.95.2" "uvicorn[standard]==0.22.0" "pytest" "redis>=4.6.0,<5.0"
          fi
      - name: Fast smoke tests (DB migrate check)
        run: |
          set -euo pipefail
          # runtime guard: skip if no DATABASE_URL env var set (avoids using secrets in YAML)
          if [ -z "${DATABASE_URL:-}" ]; then
            echo "No DATABASE_URL configured; skipping DB migrate check"
            exit 0
          fi
          echo "Running fast DB migrate check..."
          if [ -f .venv/bin/activate ]; then
            . .venv/bin/activate
          fi
          # If a migrate command exists (replaceable), run it. Default: try alembic heads (if present)
          if command -v alembic >/dev/null 2>&1 || [ -d alembic ]; then
            if command -v alembic >/dev/null 2>&1; then
              alembic current || true
            else
              echo "alembic not installed in venv; skipping alembic check"
            fi
          else
            echo "No alembic configuration found — skipping DB migrate check"
          fi
          echo "DB migrate check completed"
      - name: Run tests
        run: |
          if [ -d services/health/tests ]; then
            pytest services/health/tests -q
          else
            echo "No health tests found (services/health/tests). Skipping tests."
            exit 0
          fi
